import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:shop_app/bloc/home_cubit/home_states.dart';
import 'package:shop_app/helpers/dio_helper.dart';
import 'package:shop_app/models/category_model.dart';
import 'package:shop_app/models/home_model.dart';
import 'package:shop_app/screens/categories_screen.dart';
import 'package:shop_app/screens/fav_screen.dart';
import 'package:shop_app/screens/home_screen.dart';
import 'package:shop_app/screens/setting_screen.dart';

class HomeCubit extends Cubit<HomeStates> {
  HomeCubit() : super(HomeInitialState());

  static HomeCubit get(context) => BlocProvider.of(context);

  int currentIndex = 0;
  List<BottomNavigationBarItem> bottoms = const [
    BottomNavigationBarItem(icon: Icon(Icons.home), label: 'Home'),
    BottomNavigationBarItem(
        icon: Icon(Icons.dashboard_outlined), label: 'Categories'),
    BottomNavigationBarItem(icon: Icon(Icons.favorite), label: 'Favorite'),
    BottomNavigationBarItem(icon: Icon(Icons.settings), label: 'Settings'),
  ];
  List<Widget> screens = const [
    HomeScreen(),
    CategoriesScreen(),
    FavoritesScreen(),
    SettingsScreen()
  ];

  void changeNav(int index) {
    currentIndex = index;
    emit(HomeChangeNavBarState());
  }

  Autogenerated? homeData;

  Future getHomeData(alToken) async {
    emit(HomeGetDataLoadingState());
    return await DioHelper.getData(url: 'home', alToken: alToken).then((value) {
      emit(HomeGetDataSucState());
      homeData = Autogenerated.fromJson(value!.data);
    }).catchError((onError) {
      emit(HomeGetDataErrorState());
    });
  }

  CategoryModel? categoryData;

  Future getCategoryData() async {
    return await DioHelper.getData(
      url: 'categories',
    ).then((value) {
      emit(CategoryGetDataSucState());
      categoryData = CategoryModel.fromJson(value!.data);
    });
  }

  List<Products> fav = [];

  addToFav(Products? model) {
    if (fav.contains(model)) {
      fav.remove(model);
    }else{
      fav.add(model!);
    }
    emit(AddDataToFavSucState());
    print(fav.length);
  }
  }
